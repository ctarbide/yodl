void buildManual(string conversion, int usePath)
{
    string include;
    string manualDestination;

    if (exists("tmp/" + conversion + "-manual-stamp"))
        return;

    include = g_include + ":manual/yo";

    manualDestination =  g_install + DOCDOC + "/yodl." + conversion ;

    if (usePath)
    {
        putenv("YODL_BIN=" + g_cwd + g_install + "usr/bin/");
        run("yodl2" + conversion + include + 
            " -o" + manualDestination +
            " manual");
    }
    else
    {
        run(g_install + BIN + "/yodl" + include + 
                            " -o" + g_wip + "out " +
                            conversion + " manual");

        if (conversion == "latex")
            run("mv " + g_wip + "out " + g_install + DOCDOC + "/yodl.latex");
        else
            run(g_install + BIN + "/yodlpost "
                        + g_wip + "out.idx " + g_wip + "out " +
                        manualDestination);
    }

    if (conversion == "latex")
    {
        chdir(g_install + DOCDOC);

        runP(P_NOCHECK, "latex yodl.latex");
        runP(P_NOCHECK, "latex yodl.latex");
        run("latex yodl.latex");
        run("rm yodl.aux yodl.log yodl.toc");

        run("dvips -o yodl.ps yodl.dvi");
        run("ps2pdf yodl.ps yodl.pdf");
        chdir(g_cwd);
    }
    run("touch tmp/" + conversion + "-manual-stamp");
}

void manualMayExit(string path, int doExit) // doExit == 0, then only html
{
    int idx;
    int usePath;
    string macroBase;

    usePath = path == "path";
    macroBase = g_wip + "macros/";

    manualMacroList();

    if (exists("tmp/macros-stamp"))
        system("rm -f tmp/macros-stamp tmp/man-macros-stamp");

                                       // build the macros for the man(ual)
                                       // "./": use the current dir for 
                                       // finding macros
    buildMacros(macroBase, "tmp/man-macros-stamp", "./");
    
    md(g_install + DOCDOC);

    buildManual("html", usePath);

    if (doExit)
    {
        system("scripts/hrefnotmpinstall");

        buildManual("txt", usePath);
        buildManual("latex", usePath);
        exit(0);
    }
}

void manualExit(string path)
{
    manualMayExit(path, 1);
}









